#cmake_minimum_required (VERSION 3.5 FATAL_ERROR)

set(PROJECT tinyb)

# Global CPackDeb stuff
INCLUDE(InstallRequiredSystemLibraries)

# set(CPACK_DEBIAN_PACKAGE_DEBUG ON)
set(CPACK_DEB_COMPONENT_INSTALL ON)
set(CPACK_DEB_PACKAGE_COMPONENT ON)
SET(CPACK_GENERATOR "DEB")
# get the architecture of Deb package. The name of the architecture is not
# always the same with ${CMAKE_SYSTEM_PROCESSOR}
if(NOT CPACK_DEBIAN_ARCHITECTURE)
    execute_process(COMMAND dpkg --print-architecture OUTPUT_VARIABLE arch OUTPUT_STRIP_TRAILING_WHITESPACE)
    set(CPACK_DEBIAN_ARCHITECTURE "${arch}")
endif()

string(REGEX REPLACE "([^0-9]*)([0-9].*)" "\\2" DEBIAN_PACKAGE_VERSION "${VERSION_MAJOR}")
#message("DEBIAN PACKAGE VERSION: ${DEBIAN_PACKAGE_VERSION}")

SET(CPACK_PACKAGE_NAME "${PROJECT}")
SET(CPACK_PACKAGE_VERSION ${DEBIAN_PACKAGE_VERSION})
SET(CPACK_PACKAGE_VENDOR "Revolta Engineering LLC")
SET(CPACK_PACKAGE_CONTACT "info@revolta-engineering.ru")
SET(CPACK_PACKAGE_FILE_NAME ${PROJECT}_${CPACK_PACKAGE_VERSION}_${CPACK_DEBIAN_ARCHITECTURE})
SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "Revolta Engineering LLC <info@revolta-engineering.ru>")
SET(CPACK_DEBIAN_PACKAGE_PRIORITY "optional")
SET(CPACK_DEBIAN_PACKAGE_SECTION "misc")
SET(CPACK_DEBIAN_PACKAGE_DEPENDS " bluez ")
SET(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${CMAKE_CURRENT_SOURCE_DIR}/DEBIAN/postinst;${CMAKE_CURRENT_SOURCE_DIR}/DEBIAN/postrm")
SET(CPACK_COMPONENT_DESCRIPTION "JNI API to work with BlueZ via D-Bus interface.")

# Workaround to prevent adding -on suffix to package name
SET(CPACK_DEB_PACKAGE_COMPONENT "")

# CPack DEB
INCLUDE(CPack)
